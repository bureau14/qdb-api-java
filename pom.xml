<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.b14.qdb</groupId>
	<artifactId>qdb-api</artifactId>
	<version>2.0.0</version>
	<name>quasardb Java API</name>
	<description>High level java client API</description>

	<url>https://www.quasardb.net</url>

	<licenses>
		<license>
			<name>quasardb license</name>
			<url>https://www.quasardb.net/</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<organization>
		<name>quasardb SAS</name>
		<url>https://www.quasardb.net</url>
	</organization>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<powermock.version>1.6.1</powermock.version>
		<cglib.version>2.2.2</cglib.version>
		<junit.version>4.11</junit.version>
		<contiperf.version>2.3.4</contiperf.version>
		<feed4junit.version>0.6.6</feed4junit.version>
		<findbugs.version>3.0.0</findbugs.version>
		
		<!-- Hadoop part -->
		<hadoop.version>1.2.1</hadoop.version>
		<hadoop.common.version>2.6.0</hadoop.common.version>
		<sqoop.version>1.99.4</sqoop.version>
		<pig.version>0.14.0</pig.version>
		<flume.version>1.5.2</flume.version>
		<mahout.version>0.9</mahout.version>
	</properties>

	<repositories>
		<repository>
			<id>maven.jahia.org</id>
			<name>maven.jahia.org Repository</name>
			<url>https://www.escidoc.org/artifactory/maven.jahia.org/</url>
		</repository>
		<repository>
			<id>repository.sonatype.org</id>
			<name>repository.sonatype.org Repository</name>
			<url>https://repository.sonatype.org/</url>
		</repository>
		<repository>
			<id>cloudbees-snapshots</id>
			<name>cloudbees-snapshots</name>
			<url>https://repository-jsr107.forge.cloudbees.com/snapshot</url>
		</repository>
	</repositories>

	<dependencies>
		<!-- Add dependency to the junit framework - Unit Testing tools -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.databene</groupId>
			<artifactId>contiperf</artifactId>
			<version>${contiperf.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.databene</groupId>
			<artifactId>feed4junit</artifactId>
			<version>${feed4junit.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Add dependency to JSON parsing library - Unit Tests -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-jaxrs</artifactId>
			<version>1.9.13</version>
			<scope>test</scope>
		</dependency>
		
		<!-- Add dependency to the mock framework - TU -->
	   <dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
	   </dependency>
	   <dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4-rule</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-classloading-xstream</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
	   
		<!-- Add dependency to the cglib framework - TU with cglib proxified objects -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>${cglib.version}</version>
			<scope>test</scope>
		</dependency>
		
	</dependencies> 
	
	<reporting>
		<plugins>
			
			<!-- Javadoc with UML diagramms -->
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8</version>
				<reportSets>
					<reportSet>
						<id>html</id>
						<reports>
							<report>javadoc</report>
						</reports>
					</reportSet>
					<reportSet>
						<id>umlgraph</id>
						<configuration>
							<doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
							<docletArtifact>
								<groupId>org.umlgraph</groupId>
								<artifactId>doclet</artifactId>
								<version>5.1</version>
							</docletArtifact>
							<additionalparam>
								-inferrel -inferdep -quiet -hide java.*
								-collpackages java.util.*
								-qualify -postfixpackage 
								-nodefontsize 9 -nodefontpackagesize 7
							</additionalparam>
							<useStandardDocletOptions>false</useStandardDocletOptions>

							<!-- Other dir than apidocs -->
							<destDir>umldoc</destDir>

							<!-- For the project-reports page-->
							<name>UML Javadoc</name>
							<description>Javadoc with UML documentation.</description>
						</configuration>
						<reports>
							<report>javadoc</report>
						</reports>
					</reportSet>
				</reportSets>
				<configuration>
					<charset>UTF-8</charset>
					<docencoding>UTF-8</docencoding>
					<docfilessubdirs>true</docfilessubdirs>
					<links>
						<link>http://java.sun.com/j2se/1.5.0/docs/api/</link>
						<link>http://plexus.codehaus.org/ref/1.0-alpha-9/apidocs</link>
					</links>
					<source>1.5</source>
					<sourcepath>${basedir}/src/main/java/com/b14/qdb</sourcepath>
					<reportOutputDirectory>${project.reporting.outputDirectory}/javadocs</reportOutputDirectory>
					<destDir>javadocs</destDir>
					<excludePackageNames>com.b14.qdb.jni</excludePackageNames>
					<show>private</show>
					<nohelp>true</nohelp>
				</configuration>
			</plugin>

			
			<!-- Source code linker -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<aggregate>true</aggregate>
					<linkJavadoc>true</linkJavadoc>
					<javadocDir>./target/site/apidocs</javadocDir>
					<includes>
						<include>**/Quasardb*.java</include>
					</includes>
					<excludes>
						<exclude>**/jni/*.java</exclude>
						<exclude>**/*IT.java</exclude>
						<exclude>**/*Test.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			

			<!-- Coding conventions checks -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<excludes></excludes>
					<configLocation>config/sun_checks.xml</configLocation>
				</configuration>
			</plugin>
			
			<!-- Collect some code metrics like lines count, cyclomatic complexity -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>javancss-maven-plugin</artifactId>
				<version>2.0</version>
			</plugin>
			
			<!-- Compute graph dependencies -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
				<version>2.0</version>
			</plugin>


			<!-- Analyze testability of the project -->
			<plugin>
				<groupId>com.google.testability-explorer</groupId>
				<artifactId>maven-testability-plugin</artifactId>
				<version>1.3.3</version>
			</plugin>
		</plugins>
	</reporting>    
	
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.plexus</groupId>
					<artifactId>plexus-component-metadata</artifactId>
					<version>1.5.5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.2.1</version>
				</plugin>

			</plugins>
		</pluginManagement>
		
		<plugins>
			<!-- Read project properties -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>${basedir}/src/etc/project.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>

			
			<!-- Packaging API in one jar without dependencies -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<mode>release</mode>
							<url>${project.url}</url>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			
			<!-- Packaging a jar containing tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<mode>release</mode>
							<url>${project.url}</url>
						</manifestEntries>
					</archive>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Compiling project -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<inherited>true</inherited>
				<configuration>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
					<optimize>true</optimize>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>

			<!-- Build a Jar with sources and javadocs -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.0.3</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<!-- Handle resources for tests and sqoop -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>


			<!-- Draw dependencies graph of project -->
			<plugin>
				<groupId>org.fusesource.mvnplugins</groupId>
				<artifactId>maven-graph-plugin</artifactId>
				<version>1.9</version>
			</plugin>

			<!-- Build one big jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<finalName>${uberjar-name}</finalName>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<shadedClassifierName>all</shadedClassifierName>
							<!-- Copying native librairies : -->
							<transformers>
								<!--    -> Linux -->
								<transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
									<resource>${lib-linux-dir}/libqdb_api.so</resource>
									<file>${lib-linux-dir}/libqdb_api.so</file>
								</transformer>
								<transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
									<resource>${lib-linux-dir}/libqdb_java_api.so</resource>
									<file>${lib-linux-dir}/libqdb_java_api.so</file>
								</transformer>
								<!--    -> BSD -->
							<transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
									<resource>${lib-bsd-dir}/libqdb_api.so</resource>
									<file>${lib-bsd-dir}/libqdb_api.so</file>
								</transformer>
								<transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
									<resource>${lib-bsd-dir}/libqdb_java_api.so</resource>
									<file>${lib-bsd-dir}/libqdb_java_api.so</file>
								</transformer>
								<!--    -> Windows 64 bits -->

								<transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
									<resource>${lib-win64-dir}/qdb_api.dll</resource>
									<file>${lib-win64-dir}/qdb_api.dll</file>
								</transformer>
								<transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
									<resource>${lib-win64-dir}/qdb_java_api.dll</resource>
									<file>${lib-win64-dir}/qdb_java_api.dll</file>
								</transformer>
								<!--    -> Windows 32 bits -->
								<transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
									<resource>${lib-win32-dir}/qdb_api.dll</resource>
									<file>${lib-win32-dir}/qdb_api.dll</file>
								</transformer>
								<transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
									<resource>${lib-win32-dir}/qdb_java_api.dll</resource>
									<file>${lib-win32-dir}/qdb_java_api.dll</file>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<profiles>
		<profile>
			<!--Only releases need to be signed. Use mvn -Prelease clean deploy to deploy releases -->
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
