package com.b14.qdb.hadoop.mapreduce.examples.financial;

import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;
import java.math.BigDecimal;
import java.math.BigInteger;

import org.apache.hadoop.io.Writable;

/**
 * Writable representing a stock's price on a given day
 *
 */
public class StockWritable implements Writable {
    /** The stock's price */
    public BigDecimal price;
    
    /** The date of the stock price */
    public String date;

    /**
     * Empty constructor - required for serialization.
     */
    public StockWritable() {
    }

    /**
     * Constructor
     */
    public StockWritable(String date, BigDecimal price) {
        this.date = date;
        this.price = price;
    }

    /**
     * Serializes the fields of this object to out.
     */
    public void write(DataOutput out) throws IOException {
        out.writeUTF(date);
        out.writeInt(price.scale());
        out.writeInt(price.unscaledValue().toByteArray().length);
        out.write(price.unscaledValue().toByteArray());
    }

    /**
     * Deserializes the fields of this object from in.
     */
    public void readFields(DataInput in) throws IOException {
        date = in.readUTF();
        int scale = in.readInt();
        int byteArraySize = in.readInt();
        byte[] unscaledvalue = new byte[byteArraySize];
        in.readFully(unscaledvalue);
        price = new BigDecimal(new BigInteger(unscaledvalue), scale);
    }
    
    @Override
    public String toString() {
        return date + " " + price;
    }
    
    @Override
    public Object clone() {
        return new StockWritable(date, price);
    }

    /**
     * The hashCode method generates a hash code for a StockWritable object. The equals and hashCode methods have been
     * automatically generated by Eclipse by right-clicking on an empty line, selecting Source, and then selecting the
     * Generate hashCode() and equals() option.
     */
    @Override
    public int hashCode() {
        return date.hashCode();
    }
}
